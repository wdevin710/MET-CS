{
    "collab_server" : "",
    "contents" : "# # ###--- Set Operations ----\n# a <- c(\"asd\",\"qwer\",\"zxcvb\")\n# b <- c(\"qwer\",\"asd\",\"zxcvb\",\"poi\")\n# setdiff(b,a) # Difference (larger first)\n# intersect(a,b) # Common \n# \n# \n\n### -------- ECfg. Match -----------------\ny1 <- readClipboard() # Set VAV005\ny1 <- gsub(\"-\",\"_\",y1) # Replace \"-\" with \"_\"\n\ny2 <- readClipboard() # Current Set \ny2 <- gsub(\"_ZN_\",\"_ZONE_\",y2)\ny2 <- gsub(\"\\\\.\",\"_\",y2) # Replace \"-\" with \"_\"\ny2 <- gsub(\"-\",\"_\",y2) # Replace \"-\" with \"_\"\ny2 <- gsub(\"/\",\"_\",y2) # Replace \"-\" with \"_\"\ny2 <- gsub(\"_AHU_\",\"_\",y2) # Replace \"-\" with \"_\"\n# y2 <- paste0(\"ECfg_\",y2) # Paste & Insert Names\n\n#--- Set Operations\nDifference1 <- setdiff(y1,y2) # What is Different in y1\nDifference2 <- setdiff(y2,y1) # What is Different in Current\nCommon <- intersect(y1,y2) # Common \n\n#--- Export to Clipboard \nwriteClipboard(as.character(Difference1)) # Unique to VAV005\nwriteClipboard(as.character(Difference2)) # Unique to Current \nwriteClipboard(as.character(Common)) # Common to both  \n\n# # ###--- Distance Operations ----\n\n# Example 6: The Jaccard measure\nlibrary(stringdist)\ndict1 <- \"analytics\"\ndict2 <- \"analysis\"\nquery <- \"analisis\"\nA <- unlist(strsplit(dict1,\"\")) # Get the set of characters in dict1\nB <- unlist(strsplit(dict2,\"\")) # Get the set of characters in dict2\nQ <-  unlist(strsplit(query,\"\")) # Get the set of characters in query\nUA <- union(A,Q)\nIA <- intersect(A,Q) \nJA <- length(IA)/length(UA) # The Jaccard measure\nsprintf(\"%s %f\",\"The Jaccard Q-A measure is\",JA) # Display calculated measure\nUB <- union(B,Q)\nIB <- intersect(B,Q) \nJB <- length(IB)/length(UB) # The Jaccard measure\nsprintf(\"%s %f\",\"The Jaccard Q-B measure is\",JB) # Display calculated measure\n\namatch(query,c(dict1,dict2), method = \"jaccard\", maxDist = 1) # Chooses the index of the better match (maxDist = maximum # typos)\namatch(query,c(dict1,dict2), method = \"osa\", maxDist = 1) # Optimal string aligment, (restricted Damerau-Levenshtein distance) \n\nc(\"Web Analytics\",\"Data Analytics\")\n\n# strsplit Example\nregpattern <-  \"[.]|[_]|[g1]\"\nregpattern <-  \"[._]\"\nz <- strsplit(\"abc.def.gg1h_123\",regpattern)\nz1<-unlist(z)\n\n\n\n\n\n",
    "created" : 1517431835927.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3367322088",
    "id" : "B32BD7D",
    "lastKnownWriteTime" : 1464722192,
    "last_content_update" : 1464722192,
    "path" : "~/My Files/Teachng/2019/Spring/Getting Started with R/FCX_Examples_3.R",
    "project_path" : "FCX_Examples_3.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}