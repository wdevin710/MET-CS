{
    "collab_server" : "",
    "contents" : "library(googleVis)\n\n# Line Chart\n\nstudent.data = data.frame(\n  Student = c(\"Alice\", \"Bob\", \"Charlie\", \"Dave\", \"Ed\"),\n  Exam = c(90, 80, 60, 85, 75),\n  Quiz = c(8, 6, 9, 7, 10))\n\nstudent.data\n\nchart1 <- gvisLineChart(student.data)\nplot(chart1)\n\nchart1$type\nchart1$chartid\nchart1$html$header\nchart1$html$chart\nchart1$html$caption\nchart1$html$footer\n\nnames(chart1$html$chart)\n\nchart1$html$chart['jsChart']\nchart1$html$chart['divChart']\n\n# Save chart html to file\ncat(chart1$html$chart, file = \"chart1.html\")\n\n# Line Chart with 2 axis\n\n\nchart2 <- \n  gvisLineChart(student.data,\n                \"Student\", \n                c(\"Exam\",\"Quiz\"),\n                options=list(\n                  series=\"[{targetAxisIndex: 0},\n                           {targetAxisIndex:1}]\",\n                  vAxes=\"[{title:'Exam'}, {title:'Quiz'}]\"\n                ))\n                  \nplot(chart2)\n\ncat(chart2$html$chart, file = \"chart2.html\")\n\n# chart with options\n\nchart3 <-  \n  gvisLineChart(student.data, \n                xvar=\"Student\", \n                yvar=c(\"Exam\",\"Quiz\"),\n                options=list(\n                  title=\"Student Scores\",\n                  titleTextStyle=\"{color:'red', \n                          fontName:'Courier', \n                          fontSize:16}\", \n                  backgroundColor=\"#D3D3D3\",                          \n                  vAxis=\"{gridlines:{color:'red', count:5}}\",\n                  hAxis=\"{title:'Student', titleTextStyle:{color:'blue'}}\",\n                  series=\"[{color:'green', targetAxisIndex: 0}, \n                           {color: 'orange',targetAxisIndex:1}]\",\n                  vAxes=\"[{title:'Exam'}, {title:'Quiz'}]\",\n                  legend=\"bottom\",\n                  curveType=\"function\",\n                  width=500, height=300                         \n                        ))\nplot(chart3)\n\ncat(chart3$html$chart, file = \"chart3.html\")\n\n# Inline editing\n\nchart4 <-  \n  gvisLineChart(student.data, \n                xvar = \"Student\", \n                yvar = c(\"Exam\",\"Quiz\"),\n                options=list(\n                  series=\"[{targetAxisIndex: 0},\n                           {targetAxisIndex:1}]\",\n                  vAxes=\"[{title:'Exam'}, {title:'Quiz'}]\",\n                  gvis.editor=\"Edit me!\"))\nplot(chart4)\n\ncat(chart4$html$chart, file = \"chart4.html\")\n\n\n\n# Bar Chart\n\nchart5 <- gvisBarChart(student.data)\nplot(chart5)\n\ncat(chart5$html$chart, file = \"chart5.html\")\n\nchart6 <- gvisBarChart(student.data,\n                       xvar=\"Student\", \n                       yvar=c(\"Exam\",\"Quiz\"),\n                       options=list(isStacked = TRUE))\nplot(chart6)\n\ncat(chart6$html$chart, file = \"chart6.html\")\n\n\n# Column chart\n\nchart7 <- gvisColumnChart(student.data)\nplot(chart7)\n\ncat(chart7$html$chart, file = \"chart7.html\")\n\nchart8 <- gvisColumnChart(student.data,\n                       xvar=\"Student\", \n                       yvar=c(\"Exam\",\"Quiz\"),\n                       options=list(isStacked = TRUE))\nplot(chart8)\n\ncat(chart8$html$chart, file = \"chart8.html\")\n\n# Area chart\n\nchart9 <- gvisAreaChart(student.data)\n\nplot(chart9)\n\ncat(chart9$html$chart, file = \"chart9.html\")\n\nchart10 <- gvisAreaChart(student.data,\n                          xvar=\"Student\", \n                          yvar=c(\"Exam\",\"Quiz\"),\n                          options=list(isStacked = TRUE))\nplot(chart10)\n\ncat(chart10$html$chart, file = \"chart10.html\")\n\n# Combo chart\n\nchart11 <- \n  gvisComboChart(student.data,\n                 xvar=\"Student\",\n                 yvar=c(\"Exam\", \"Quiz\"),\n                 options=list(seriesType=\"bars\",\n                              series='{1: {type:\"line\"}}'))\nplot(chart11)\n\ncat(chart11$html$chart, file = \"chart11.html\")\n\nchart12 <- \n  gvisComboChart(student.data,\n                 xvar=\"Student\",\n                 yvar=c(\"Exam\", \"Quiz\"),\n                 options=list(seriesType=\"line\",\n                              series='{1: {type:\"bars\"}}'))\nplot(chart12)\n\ncat(chart12$html$chart, file = \"chart12.html\")\n\n# Scatter chart\n\nhead(women)\n\nchart13 <- gvisScatterChart(women)\n\nplot(chart13)\n\ncat(chart13$html$chart, file = \"chart13.html\")\n\n\nchart14 <- \n  gvisScatterChart(women,\n                   options=list(\n                     legend=\"none\",\n                     lineWidth=2, pointSize=10,\n                     pointShape=\"diamond\",\n                     title=\"Weight vs Height\", \n                     vAxis=\"{title:'weight (lbs)'}\",\n                     hAxis=\"{title:'height (in)'}\", \n                     width=400, height=400))\nplot(chart14)\n\ncat(chart14$html$chart, file = \"chart14.html\")\n\nhead(iris)\n\nchart15 <- gvisScatterChart(iris[,1:4],\n                            options=list(\n                              legend=\"top\",\n                              hAxis=\"{title:'Sepal Length'}\", \n                              width=600, height=400))\nplot(chart15)\n\ncat(chart15$html$chart, file = \"chart15.html\")\n\ndata.iris <- iris\n\ndata.iris$Index <- 1:nrow(iris)\n\nhead(data.iris, n = 2)\n\nhead(data.iris[, c(6, 1:4)], n = 2)\n\nchart15_1 <- gvisScatterChart(data.iris[, c(6, 1:4)],\n                            options=list(\n                              hAxis=\"{title:'Index'}\", \n                              width=700, height=600))\nplot(chart15_1)\n\ncat(chart15_1$html$chart, file = \"chart15_1.html\")\n\n# Bubble chart\n\nhead(Fruits)\n\nchart16 <- \n  gvisBubbleChart(Fruits, \n                  idvar=\"Fruit\", \n                  xvar=\"Sales\", yvar=\"Expenses\",\n                  colorvar=\"Year\", sizevar=\"Profit\",\n                  options=list(\n                    hAxis='{minValue:70, maxValue:120}',\n                    width=600, height=400))\nplot(chart16)\n\ncat(chart16$html$chart, file = \"chart16.html\")\n\n\n# Candlestick chart\n\nchart17 <- \n  gvisCandlestickChart(OpenClose, xvar=\"Weekday\", \n                       low=\"Low\", high=\"High\",\n                       open=\"Open\", close=\"Close\",\n                        options=list(\n                          vAxis='{minValue:0, maxValue:100}',\n                          legend='none'))\n\nplot(chart17)\n\ncat(chart17$html$chart, file = \"chart17.html\")\n\n\n# Pie chart\n\nchart18 <- gvisPieChart(CityPopularity)\n\nplot(chart18)\n\ncat(chart18$html$chart, file = \"chart18.html\")\n\n# Donought chart\n\nchart19 <- gvisPieChart(CityPopularity, options=list(\n  slices=\"{1: {offset: 0.3}, 3: {offset: 0.2}}\",\n  title='City popularity',\n  legend='none',\n  pieSliceText='label',\n  pieHole=0.2,\n  width=500, height=500))\n\nplot(chart19)\n\ncat(chart19$html$chart, file = \"chart19.html\")\n\nchart19_1 <- gvisPieChart(CityPopularity, options=list(\n  slices=\"{1: {offset: 0.3}}\",\n  title='City popularity',\n  legend='none', is3D='true',\n  pieSliceText='label',\n  pieHole=0.2,\n  width=500, height=500))\n\nplot(chart19_1)\n\ncat(chart19_1$html$chart, file = \"chart19_1.html\")\n\n\n# Gauge\n\nCityPopularity\n\nchart20 <-  \n  gvisGauge(CityPopularity,\n            options=list(min=0, max=800))\nplot(chart20)\n\ncat(chart20$html$chart, file = \"chart20.html\")\n\nchart21 <-  \n  gvisGauge(CityPopularity,\n            options=list(min=0, max=800,\n                         redFrom=0, redTo=300, \n                         yellowFrom=300, yellowTo=500,\n                         greenFrom=500, greenTo=800, \n                         width=400, height=300))\nplot(chart21)\n\ncat(chart21$html$chart, file = \"chart21.html\")\n\n# Histogram\n\nchart22 <- gvisHistogram(iris[,1:4],\n                            options=list(\n                              legend=\"top\"))\nplot(chart22)\n\ncat(chart22$html$chart, file = \"chart22.html\")\n\n# Table\n\nhead(Stock)\n\nchart23 <- \n  gvisTable(Stock,\n            formats=list(Value=\"#,###\"))\n\nplot(chart23)\n\ncat(chart23$html$chart, file = \"chart23.html\")\n\n\n# Table with Pages\n\nnames(Population)\n\nhead(Population[, c(1:4, 6:7)])\n\nPopulation[1,5]\n\nchart24 <- \n  gvisTable(Population,\n            formats=list(Population=\"#,###\",\n                         '% of World Population'='#.#%'),\n            options=list(page='enable'))\nplot(chart24)\n\ncat(chart24$html$chart, file = \"chart24.html\")\n\n\n\n# Organizational chart\n\ndata = data.frame(\n  Node =  c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"),\n  Parent = c(NA, \"A\", \"A\", \"A\", \"C\", \"C\"),\n  val = 1:6\n)\n\ndata\n\nchart25 <- \n  gvisOrgChart(data,\n               idvar=\"Node\",\n               parentvar=\"Parent\",\n               tipvar=\"val\",\n               options=list(width=600, height=250,\n                            size='large', \n                            allowCollapse=TRUE))\n\nplot(chart25)\n\ncat(chart25$html$chart, file = \"chart25.html\")\n\n\nRegions\n\nchart26 <- \n  gvisOrgChart(Regions,\n               options=list(width=600, height=450,\n                            size='large', \n                            allowCollapse=TRUE))\n\nplot(chart26)\n\ncat(chart26$html$chart, file = \"chart26.html\")\n\n\n# Tree map\n\nchart27 <- \n  gvisTreeMap(Regions,\n              idvar = \"Region\", \n              parentvar = \"Parent\",\n              sizevar = \"Val\",\n              colorvar = \"Fac\",\n              options=list(width=450, height=450,\n                           fontSize=16))\n\nplot(chart27)\n\ncat(chart27$html$chart, file = \"chart27.html\")\n\n\n# Annotation chart\n\nchart28 <- \n  gvisAnnotationChart(Stock,\n                      datevar=\"Date\",\n                      numvar=\"Value\", \n                      idvar=\"Device\",\n                      titlevar=\"Title\", \n                      annotationvar=\"Annotation\")\n\nplot(chart28)\n\ncat(chart28$html$chart, file = \"chart28.html\")\n\n# Sankey chart\ndata.SK <- data.frame(\n  From=c('GB','FR','IN', 'IN','JP','SG','JFK','JFK','SFO','SFO'),\n  To=c(rep('JFK', 3), rep('SFO', 3), rep(c('BOS', 'DC'),2)),\n  Weight=c(5,7,6,2,9,4, 10,8, 6,9))\n\ndata.SK\n\nchart29 <- \n  gvisSankey(data.SK,\n             from=\"From\", to=\"To\", weight=\"Weight\",\n             options=list(\n               sankey=\"{link: {color: { fill: '#d799ae' } },\n                                node: { color: { fill: '#00ff00' },\n                                label: { color: '#871b47' } }}\"))\nplot(chart29)\n\ncat(chart29$html$chart, file = \"chart29.html\")\n\n\n# Geo chart\n\nExports\n\nchart30 <-\n  gvisGeoChart(Exports, \n               locationvar=\"Country\", \n               colorvar=\"Profit\")\n               \nplot(chart30)\n\ncat(chart30$html$chart, file = \"chart30.html\")\n\n# US Data state by state\n\nlibrary(datasets)\n\ncolnames(state.x77)\n\nrownames(state.x77)\n\nstates <- data.frame(\"State\" = rownames(state.x77), \n                     state.x77[, c(1,2)])\n\nhead(states)\n\nchart31 <- \n  gvisGeoChart(states, \n               locationvar = \"State\", \n               colorvar = \"Population\",\n               options=list(region=\"US\",\n                            displayMode=\"regions\", \n                            resolution=\"provinces\",\n                            width=600, height=400))\nplot(chart31)\n\ncat(chart31$html$chart, file = \"chart31.html\")\n\n\n# Hurricane Andrew\n\nnames(Andrew)\n\nAndrew[1:3, c(\"LatLong\",\"Speed_kt\", \"Pressure_mb\")]\n\nchart32 <- \n  gvisGeoChart(Andrew, \n               locationvar=\"LatLong\", \n               sizevar=\"Speed_kt\",\n               colorvar=\"Pressure_mb\", \n               options=list(region=\"US\",\n                            displayMode=\"Markers\", \n                            resolution=\"provinces\",\n                 colorAxis=\"{colors:['red', 'grey']}\"))\n\nplot(chart32)\n\ncat(chart32$html$chart, file = \"chart32.html\")\n\n# Google Maps\n\nAndrew[1:3, c(\"LatLong\",\"Tip\")]\n\nchart33 <- \n  gvisMap(Andrew, \n          locationvar = \"LatLong\" , \n          tipvar = \"Tip\", \n          options=list(\n            showTip=TRUE, \n            showLine=TRUE, \n            enableScrollWheel=TRUE,\n            mapType='terrain', \n            useMapTypeControl=TRUE))\n\nplot(chart33)\n\ncat(chart33$html$chart, file = \"chart33.html\")\n\nPopulation[1:10, c(\"Country\", \"Population\")]\n\nchart33_1 <- \n  gvisMap(Population[1:10,], \n          locationvar = \"Country\" , \n          tipvar = \"Population\", \n          options=list(\n            showTip=TRUE, \n            mapType='terrain', \n            useMapTypeControl=TRUE))\n\nplot(chart33_1)\n\ncat(chart33_1$html$chart, file = \"chart33_1.html\")\n\n# Calendar chart\n\nhead(Cairo)\nrange(Cairo$Temp)\n\nchart34 <- \n  gvisCalendar(Cairo,\n               datevar=\"Date\", \n               numvar=\"Temp\",\n               options=list(\n                 title=\"Daily temperature in Cairo\",\n                 width=950))\n                 \nplot(chart34)\n\ncat(chart34$html$chart, file = \"chart34.html\")\n\nchart34_1 <- \n  gvisCalendar(Cairo,\n               datevar=\"Date\", \n               numvar=\"Temp\",\n               options=list(\n                 title=\"Daily temperature in Cairo\",\n                 width=950,\n                 colorAxis=\"{colors:['blue', 'red']}\"))\n\nplot(chart34_1)\n\ncat(chart34_1$html$chart, file = \"chart34_1.html\")\n\n\n\n# Timeline chart\n\ndata1 <- data.frame(\n  Term=c(\"1\",\"2\",\"3\"),\n  President=c(\"Washington\", \"Adams\", \"Jefferson\"),\n  Begin=as.Date(c(\"1789-03-29\", \"1797-02-03\", \"1801-02-03\")),\n  End=  as.Date(c(\"1797-02-03\", \"1801-02-03\", \"1809-02-03\")))\n\ndata1\n\nchart35 <- \n  gvisTimeline(data=data1, \n               rowlabel=\"President\",\n               start=\"Begin\", end=\"End\")\n\nplot(chart35)\n\ncat(chart35$html$chart, file = \"chart35.html\")\n\n\nchart36 <- \n  gvisTimeline(data=data1, \n               rowlabel=\"President\",\n               barlabel = \"Term\",\n               start=\"Begin\", end=\"End\")\n\nplot(chart36)\n\ncat(chart36$html$chart, file = \"chart36.html\")\n\n\ndata2 <- data.frame(\n  Position=c(rep(\"President\", 3), rep(\"VicePres\", 3)),\n  Name=c(\"Washington\", \"Adams\", \"Jefferson\",\n          \"Adams\", \"Jefferson\", \"Burr\"),\n  Begin=as.Date(rep(c(\"1789-03-29\", \"1797-02-03\", \n                      \"1801-02-03\"),2)),\n  End=as.Date(rep(c(\"1797-02-03\", \"1801-02-03\", \n                      \"1809-02-03\"),2)))\n\ndata2\n\nchart37 <- \n  gvisTimeline(data=data2, \n               rowlabel=\"Name\",\n               barlabel=\"Position\",\n               start=\"Begin\", end=\"End\",\n               options=list(\n                 height=350))\n\nplot(chart37)\n\ncat(chart37$html$chart, file = \"chart37.html\")\n\n\n\nchart38 <- \n  gvisTimeline(data=data2,\n               rowlabel=\"Name\",\n               barlabel=\"Position\",\n               start=\"Begin\", \n               end=\"End\",\n               options=list(\n                 timeline=\"{groupByRowLabel:false}\",\n                 height=350,\n                 backgroundColor='#add8e6',\n                 colors=\"['#cbb69d', '#603913']\"))\n\nplot(chart38)\n\ncat(chart38$html$chart, file = \"chart38.html\")\n\n\n# Merging charts\n\nexports.chart1 <- \n  gvisGeoChart(Exports, \n               locationvar=\"Country\", \n               colorvar=\"Profit\", \n               options=list(width=300, height=300))\n\nexports.chart2 <- \n  gvisTable(Exports, \n            options=list(width=200, height=300))\n\nchart39 <- gvisMerge(exports.chart1,\n                     exports.chart2,\n                     horizontal=TRUE) \nplot(chart39)\n\ncat(chart39$html$chart, file = \"chart39.html\")\n\n#\n\noptions.chart <- list(legend='none', width=320, height=130)\n\nchart40.1 <- \n  gvisTable(OpenClose, \n            options=options.chart)\n\nchart40.2 <- \n  gvisCandlestickChart(OpenClose, xvar=\"Weekday\", \n                       low=\"Low\", high=\"High\",\n                       open=\"Open\", close=\"Close\",\n                       options=options.chart)\n\nchart40.3 <- \n  gvisLineChart(OpenClose, \"Weekday\", \n                c(\"Open\", \"Close\"), \n                options=options.chart)\n\nchart40.4 <- \n  gvisColumnChart(OpenClose, \"Weekday\", \n                  c(\"Open\", \"Close\"),\n                  options=options.chart)\n\nchart40.5 <- \n  gvisAreaChart(OpenClose, \"Weekday\", \n                c(\"Open\", \"Close\"),\n                options=options.chart)\n\nchart40.6 <- \n  gvisBarChart(OpenClose, \"Weekday\", \n               c(\"Open\", \"Close\"),\n               options=options.chart)\n\nmerged.1 <- \n  gvisMerge(\n    gvisMerge(chart40.1, chart40.2, horizontal=TRUE),\n    gvisMerge(chart40.3, chart40.4, horizontal=TRUE),\n    horizontal=FALSE, tableOptions=\"bgcolor=\\\"#AABBCC\\\"\") \n\nchart40 <- \n  gvisMerge(\n    merged.1, \n    gvisMerge(chart40.5, chart40.6, horizontal=TRUE),\n    horizontal=FALSE, tableOptions=\"bgcolor=\\\"#AABBCC\\\"\") \n\nplot(chart40)\n\ncat(chart40$html$chart, file = \"chart40.html\")\n\n## Trenlines\n\n## Trend line demo\n# A trendline is a line superimposed on a chart revealing the overall direction \n# of the data. Google Charts can automatically generate trendlines for \n# Scatter Charts, Bar Charts, Column Charts, and Line Charts.\n# \n# Fore more details see:\n# https://developers.google.com/chart/interactive/docs/gallery/trendlines\n\n## Linear trend line\n\n## Add a trend line to the first series\n## ---- LinearTrend ----\nchart41 <-\n  gvisScatterChart(women, \n                   options=list(\n                     trendlines=\"0\"))\nplot(chart41)\n\ncat(chart41$html$chart, file = \"chart41.html\")\n\n\n\n## ---- ExponentialTrend ----\n\nchart42 <-\n  gvisScatterChart(women, \n                   options=list(trendlines=\n                                  \"{0: {type: 'exponential',\n                                visibleInLegend: 'true',\n                                color: 'green',\n                                lineWidth: 10,\n                                opacity: 0.5}}\",\n                                legend=\"top\"))\n\nplot(chart42)\n\ncat(chart42$html$chart, file = \"chart42.html\")\n\n\n\n## Multiple trend lines\n\nchart43 <-\n  gvisScatterChart(iris[,1:4], \n                   options=list(trendlines=\n                                  \"{0: { visibleInLegend: 'true', \n                                color: 'blue'},\n                                1: { visibleInLegend: 'false', \n                                color: 'red'},\n                                2: { visibleInLegend: 'false', \n                                color: 'orange'}\n                                }\",\n      legend=\"bottom\"))\n\nplot(chart43)\n\ncat(chart43$html$chart, file = \"chart43.html\")\n\n\n## ---- ColumnChartWithTrendline ----\n\ndata3 <- data.frame(\n  Col1=c(1,3,4,5,6,8), \n  Col2=c(12,23,32,40,50,65),\n  Col3=c(5,6,10,12,15,20))\n\ndata3\n\nchart44 <-\n  gvisColumnChart(data3,\n                  options=list(trendlines=\"{\n                               0: {\n                               type: 'exponential',\n                               labelInLegend: 'Trend 1',\n                               visibleInLegend: true,}, \n                               1:{\n                               labelInLegend: 'Trend 2',\n                               visibleInLegend: true}\n                               }\",\n            chartArea=\"{left:50,top:20,\n            width:'50%',height:'75%'}\"\n              ))\n\nplot(chart44)\n\ncat(chart44$html$chart, file = \"chart44.html\")\n\n\n\n\n",
    "created" : 1511984269882.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2346957098",
    "id" : "6D48A295",
    "lastKnownWriteTime" : 1511983770,
    "last_content_update" : 1511983770,
    "path" : "~/My Files/Teachng/2017/Fall/Classroom/Class 9/Code/Google Visualization/GoogleVis_Code.R",
    "project_path" : "GoogleVis_Code.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}